<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css">

<script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>

<section class="rvp-main page-width">
  {% if section.settings.title != blank %}
    <h1 class="section-title">{{ section.settings.title }}</h1>
  {% endif %}

  {% if section.settings.sub_title != blank %}
    <div class="sub-title">{{ section.settings.sub_title }}</div>
  {% endif %}

  <div class="swiper-container rv-products" id="recently-viewed-products">
    <div class="swiper-wrapper" id="recently-viewed-wrapper">
      <!-- Recently viewed products will be injected here via JavaScript -->
    </div>

    <!-- Progress bar (scrollbar) -->
    <div class="swiper-scrollbar"></div>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const section = document.querySelector('.rvp-main');
    const maxItems = 10;
    const currentHandle = '{{ product.handle }}';

    const productData = {
      handle: {{ product.handle | json }},
      title: {{ product.title | json }},
      image: {{ product.featured_image | image_url: 'master' | json }},
      description: {{ product.description | strip_html | truncate: 100 | json }},
      price: {{ product.price | money_without_currency | json }},
      url: {{ product.url | json }}
    };
    var recently_viewed = localStorage.getItem('recently_viewed');
    var viewed = [];
   // if(viewed.length > 0){
       viewed = JSON.parse(recently_viewed) ;
   // }

     console.log('===',viewed);
    if(viewed.length == 0){
      console.log("No recently viewed products.");
      section.style.display = 'none';
    }

      // if (viewed.length < 0) {
      
      //   console.log("No recently viewed products.");
      //     section.style.display = 'none';
      //   return;
      // }


    
    // Filter out current product
    //if(viewed.length > 0){
      viewed = viewed.filter(p => p.handle !== currentHandle);
  
      // Add current to beginning
      viewed.unshift(productData);
  
      // Limit to max items
      viewed = viewed.slice(0, maxItems);
   // }

   

    // Update localStorage
    localStorage.setItem('recently_viewed', JSON.stringify(viewed));

    // Render the list
    const wrapper = document.getElementById('recently-viewed-wrapper');
    if (wrapper && viewed.length > 0) {
      viewed.forEach(product => {
        if (product.handle !== currentHandle) {
          const slide = `
            <div class="swiper-slide">
              <div class="rv-products-box">
                <a href="${product.url}">
                  <img src="${product.image}" alt="${product.title}">
                </a>
                <div class="rv-products-box-info">
                  <h3>${product.title}</h3>
                  <div class="product-description">${product.description}</div>
                  <div class="rv-main-price">$ ${product.price}</div>
                  <button onclick="window.location.href='${product.url}'">View Product</button>
                </div>
              </div>
            </div>
          `;
          wrapper.insertAdjacentHTML('beforeend', slide);
        }
      });

      // Initialize Swiper
      new Swiper(".swiper-container", {
        // slidesPerView: 1,
        spaceBetween: 10,
        loop: false,
        scrollbar: {
          el: ".swiper-scrollbar",
          draggable: true,
        },
        breakpoints: {
          320: {
            slidesPerView: {{ section.settings.mobile_count }},
          },
          1024: {
            slidesPerView: {{ section.settings.iPad_count }},
          },
          1366: {
            slidesPerView: {{ section.settings.desktop_count }},
          },
        },
      });
    }



  });
</script>

{% schema %}
{
  "name": "Recently Viewed Products",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Section Title"
    },
     {
      "type": "text",
      "id": "sub_title",
      "label": "Section Sub Title"
    },
    {
      "type": "header",
      "content": "Recently Viewed"
    },
    {
      "type": "text",
      "id": "desktop_count",
      "label": "Products on Desktop"
    },
    {
      "type": "text",
      "id": "iPad_count",
      "label": "Products on iPad"
    },
    {
      "type": "text",
      "id": "mobile_count",
      "label": "Products on Mobile"
    }
  ],
  "presets": [
    {
      "name": "Recently Viewed Products"
    }
  ]
}
{% endschema %}
